version: '3.8'

services:
  # Secretly server with integrated web dashboard
  secretly:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - SECRETLY_CONFIG_PATH=/app/config/production.yaml
      - GIN_MODE=release
      - ENVIRONMENT=production
    volumes:
      - secretly_data:/app/data
      - secretly_certs:/app/certs
      - ./server/config/production.yaml:/app/config/production.yaml:ro
    networks:
      - secretly-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - postgres

  # PostgreSQL database (optional - can use SQLite instead)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=secretly
      - POSTGRES_USER=secretly
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - secretly-network
    restart: unless-stopped
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secretly"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and session storage (optional)
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-secretly}
    volumes:
      - redis_data:/data
    networks:
      - secretly-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional - for SSL termination and load balancing)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - secretly-network
    restart: unless-stopped
    depends_on:
      - secretly
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - secretly-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - secretly-network
    restart: unless-stopped
    secrets:
      - grafana_password
    profiles:
      - monitoring

volumes:
  secretly_data:
    driver: local
  secretly_certs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  secretly-network:
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt
  grafana_password:
    file: ./secrets/grafana_password.txt